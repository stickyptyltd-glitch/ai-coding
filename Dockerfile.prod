# LECHEYNE AI - PRODUCTION DOCKERFILE
# Multi-stage build for optimal production deployment

# Stage 1: Build dependencies
FROM node:20-alpine AS dependencies
LABEL maintainer="Sticky Pty Ltd <sticky.pty.ltd@gmail.com>"
LABEL version="2.0.0"
LABEL description="Lecheyne AI - Enterprise Development Platform"

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    cairo-dev \
    jpeg-dev \
    pango-dev \
    musl-dev \
    giflib-dev \
    pixman-dev \
    pangomm-dev \
    libjpeg-turbo-dev \
    freetype-dev

# Copy package files
COPY package*.json ./

# Install production dependencies only
RUN npm ci --only=production --silent

# Stage 2: Build application
FROM node:20-alpine AS builder

WORKDIR /app

# Copy source code
COPY . .
COPY --from=dependencies /app/node_modules ./node_modules

# Build optimizations
RUN npm run clean || true
RUN npm run build || true

# Remove development files
RUN rm -rf tests/ docs/ backups/ *.md

# Stage 3: Production runtime
FROM node:20-alpine AS production

# Create non-root user for security
RUN addgroup -g 1001 -S lecheyne && \
    adduser -S lecheyne -u 1001 -G lecheyne

WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache \
    curl \
    dumb-init \
    cairo \
    jpeg \
    pango \
    musl \
    giflib \
    pixman \
    pangomm \
    libjpeg-turbo \
    freetype

# Copy application files
COPY --from=builder --chown=lecheyne:lecheyne /app .

# Create necessary directories
RUN mkdir -p logs data cache keys backups && \
    chown -R lecheyne:lecheyne /app

# Switch to non-root user
USER lecheyne

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/healthz/strict || exit 1

# Environment defaults
ENV NODE_ENV=production
ENV PORT=3000
ENV LECHEYNE_ENVIRONMENT=production

# Add build information
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION

LABEL org.opencontainers.image.created=$BUILD_DATE
LABEL org.opencontainers.image.url="https://lecheyne.ai"
LABEL org.opencontainers.image.source="https://github.com/lecheyne-ai/platform"
LABEL org.opencontainers.image.version=$VERSION
LABEL org.opencontainers.image.revision=$VCS_REF
LABEL org.opencontainers.image.vendor="Sticky Pty Ltd"
LABEL org.opencontainers.image.title="Lecheyne AI"
LABEL org.opencontainers.image.description="Enterprise Multi-Agent Development Platform"
LABEL org.opencontainers.image.documentation="https://docs.lecheyne.ai"
LABEL org.opencontainers.image.authors="Sticky Pty Ltd <sticky.pty.ltd@gmail.com>"
LABEL org.opencontainers.image.licenses="Enterprise"

# Start application with proper init system
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "src/web-server.js"]