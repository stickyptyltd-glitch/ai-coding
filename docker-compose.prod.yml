version: '3.8'

services:
  lecheyne-ai:
    image: lecheyne/ai:latest
    container_name: lecheyne-ai-production
    restart: unless-stopped
    ports:
      - "443:3000"
      - "80:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LECHEYNE_ENVIRONMENT=production
      - LICENSE_REQUIRED=true
      - TAMPER_CHECK=true
      - TAMPER_STRICT=true
      
      # AI Provider Configuration
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AI_PROVIDER=anthropic
      - AI_MODEL=claude-3-5-sonnet-20241022
      
      # Enterprise Features
      - COMPETITIVE_EDGE_ENABLED=true
      - REVENUE_OPTIMIZATION_ENABLED=true
      - ENTERPRISE_FEATURES_ENABLED=true
      - ADVANCED_ANALYTICS_ENABLED=true
      
      # Security Configuration
      - AGENT_API_KEY=${AGENT_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      
      # Database Configuration
      - DATABASE_URL=${DATABASE_URL}
      - MEMORY_DATABASE_URL=${MEMORY_DATABASE_URL}
      
      # Performance Configuration
      - MEMORY_LIMIT=4096
      - CPU_LIMIT=4
      - CACHE_SIZE=1024
      - MAX_CONCURRENT_JOBS=50
      
      # Monitoring & Logging
      - LOG_LEVEL=info
      - METRICS_ENABLED=true
      - HEALTH_CHECK_ENABLED=true
      - PERFORMANCE_MONITORING=true
      
      # Business Configuration
      - COMPANY_NAME=Sticky Pty Ltd
      - TRADING_NAME=Lecheyne AI
      - ABN=74689285096
      - ACN=689285096
      - SUPPORT_EMAIL=sticky.pty.ltd@gmail.com
      - ENTERPRISE_EMAIL=enterprise@lecheyne.ai
      
    volumes:
      - lecheyne_data:/app/data
      - lecheyne_logs:/app/logs
      - lecheyne_keys:/app/keys
      - lecheyne_cache:/app/cache
      - lecheyne_backups:/app/backups
      
    networks:
      - lecheyne-network
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz/strict"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
      
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '4.0'
        reservations:
          memory: 2G
          cpus: '2.0'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lecheyne-ai.rule=Host(`lecheyne.ai`)"
      - "traefik.http.routers.lecheyne-ai.tls=true"
      - "traefik.http.routers.lecheyne-ai.tls.certresolver=letsencrypt"
      
  redis:
    image: redis:7-alpine
    container_name: lecheyne-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - lecheyne_redis_data:/data
    networks:
      - lecheyne-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
          
  postgres:
    image: postgres:15-alpine
    container_name: lecheyne-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=lecheyne_ai
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - lecheyne_postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lecheyne-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '2.0'
          
  nginx:
    image: nginx:alpine
    container_name: lecheyne-nginx
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - lecheyne_logs:/var/log/nginx
    networks:
      - lecheyne-network
    depends_on:
      - lecheyne-ai
      
  prometheus:
    image: prom/prometheus:latest
    container_name: lecheyne-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - lecheyne_prometheus_data:/prometheus
    networks:
      - lecheyne-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      
  grafana:
    image: grafana/grafana:latest
    container_name: lecheyne-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - lecheyne_grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - lecheyne-network
    depends_on:
      - prometheus

volumes:
  lecheyne_data:
    driver: local
  lecheyne_logs:
    driver: local
  lecheyne_keys:
    driver: local
  lecheyne_cache:
    driver: local
  lecheyne_backups:
    driver: local
  lecheyne_redis_data:
    driver: local
  lecheyne_postgres_data:
    driver: local
  lecheyne_prometheus_data:
    driver: local
  lecheyne_grafana_data:
    driver: local

networks:
  lecheyne-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16